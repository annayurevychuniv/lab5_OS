#include <iostream>
#include <fcntl.h>
#include <unistd.h>
#include <linux/input.h>
#include <cstring>
#include <cerrno>
#include <array>
#include <unordered_map>

using namespace std;

int main() {
    const char* dev = "/dev/input/by-path/platform-i8042-serio-0-event-kbd";

    array <const char*, 3> evval = {
        "Released",
        "Pressed ",
        "Repeated"
    };

    int fd = open(dev, O_RDONLY);
    if (fd == -1) {
        cerr << "Cannot open " << dev << ": " << strerror(errno) << ".\n";
        return EXIT_FAILURE;
    }

    unordered_map<int, char> keymap = {
        {KEY_A, 'a'}, {KEY_B, 'b'}, {KEY_C, 'c'}, {KEY_D, 'd'}, {KEY_E, 'e'},
        {KEY_F, 'f'}, {KEY_G, 'g'}, {KEY_H, 'h'}, {KEY_I, 'i'}, {KEY_J, 'j'},
        {KEY_K, 'k'}, {KEY_L, 'l'}, {KEY_M, 'm'}, {KEY_N, 'n'}, {KEY_O, 'o'},
        {KEY_P, 'p'}, {KEY_Q, 'q'}, {KEY_R, 'r'}, {KEY_S, 's'}, {KEY_T, 't'},
        {KEY_U, 'u'}, {KEY_V, 'v'}, {KEY_W, 'w'}, {KEY_X, 'x'}, {KEY_Y, 'y'},
        {KEY_Z, 'z'},
        {KEY_SPACE, ' '}, {KEY_DOT, '.'}, {KEY_COMMA, ','}, {KEY_MINUS, '-'},
        {KEY_1, '1'}, {KEY_2, '2'}, {KEY_3, '3'}, {KEY_4, '4'}, {KEY_5, '5'},
        {KEY_6, '6'}, {KEY_7, '7'}, {KEY_8, '8'}, {KEY_9, '9'}, {KEY_0, '0'}
    };

    bool shift = false;
    string input;
    input_event ev;

    cout << "Start typing (press Enter to finish):\n";

    while (true) {
        ssize_t n = read(fd, &ev, sizeof(ev));
        if (n == (ssize_t)-1) {
            if (errno == EINTR) continue;
            break;
        }

        if (ev.type == EV_KEY && ev.value >= 0 && ev.value <= 2) {
            cout << evval[ev.value] << " 0x" << hex << ev.code
                      << " (" << dec << ev.code << ")\n";
        }

        if (ev.type == EV_KEY) {
            if (ev.code == KEY_LEFTSHIFT || ev.code == KEY_RIGHTSHIFT)
                shift = (ev.value != 0);

            if (ev.value == 1) {
                if (keymap.find(ev.code) != keymap.end()) {
                    char c = keymap[ev.code];
                    input += shift ? toupper(c) : c;
                } else if (ev.code == KEY_BACKSPACE && !input.empty()) {
                    input.pop_back();
                } else if (ev.code == KEY_ENTER) {
                    cout << "\nYou entered: " << input << "\n";
                    break;
                }
            }
        }
    }

    close(fd);
    return 0;
}
